/**
 * The validator and the runners will print out debug info if set to true.
 * @type {string|boolean}
 * @constant
 */
const DEBUG = process.env.DEBUG || false;

/**
 * A user defined name for the test suite that is generated by the validator.
 * @type {string}
 * @constant
 */
const NAME = process.env.NAME || 'UU Test';

/**
 * Defines the browser the validation will be ran in.
 * @type {Type|string|string}
 * @constant
 */
const BROWSER = process.env.BROWSER || 'chrome';

/**
 * If true, run the configured browser in headless mode.
 * @type {boolean}
 * @constant
 */
const HEADLESS = process.env.HEADLESS || true;

/**
 * Defines the amount of millis a test runner should wait
 * @type {number}
 * @constant
 */
const TIMEOUT = process.env.TIMEOUT || 300000;

/**
 * Defines the amount of time WebDriver should wait
 * @type {number}
 * @constant
 */
const WAIT_TIMEOUT = process.env.WAIT_TIMEOUT || 300000;

/**
 * Defines the file path to the definition file that the validator will read and execute.
 * @type {string}
 * @constant
 */
const DEFINITION_FILE = process.env.DEFINITION_FILE;

/**
 * If set to true, a detailed Axe-report will be outputed after the validation has completed.
 * @type {boolean}
 * @constant
 */
const DETAILED_REPORT = process.env.DETAILED_REPORT || true;

/**
 * If set to true, will make the validator also assert warnings. Any warning will then fail the validation.
 * @type {boolean}
 * @constant
 */
const ASSERT_WARNINGS = process.env.ASSERT_WARNINGS || false;

/**
 * A comma separated list of one or more of the currently supported validation rules or tags.
 * The validation tools defaults to enabling all the available rules.
 * @type {string}
 * @constant
 */
const TAGS =
    process.env.TAGS ||
    'wcag2a,wcag2aa,wcag2aaa,section508,best-practice,experimental,' +
    'cat.aria,cat.color,cat.text-alternatives,cat.time-and-media,cat.tables,cat.semantics,' +
    'cat.sensory-and-visual-cues,cat.parsing,cat.structure,cat.name-role-value,cat.keyboard,cat.forms,cat.language';

/**
 * Can be set to a Yaml-object that the validator will run.
 * @type {yaml}
 * @constant
 */
const YAML_DEFINITION = process.env.YAML_DEFINITION || undefined;

/**
 * Indicates the path to the binary executable for Chrome.
 * Often required when running in a Docker container.
 * @type {string}
 * @constant
 */
const CHROME_BINARY = process.env.CHROME_BINARY;

/**
 * Indicates the path to the binary executable for Firefox.
 * Often required when running in a Docker container.
 * @type {string}
 * @constant
 */
const FIREFOX_BINARY = process.env.FIREFOX_BINARY;

/**
 * If set to true, will reuse an already created browser.
 * This can reduce execution time, but be aware of previous
 * application states.
 * @type {string}
 * @constant
 */
const REUSE_BROWSERS = process.env.REUSE_BROWSERS || false;


module.exports = {
    DEBUG,
    NAME,
    BROWSER,
    HEADLESS,
    TIMEOUT,
    WAIT_TIMEOUT,
    DEFINITION_FILE,
    DETAILED_REPORT,
    ASSERT_WARNINGS,
    TAGS,
    YAML_DEFINITION,
    CHROME_BINARY,
    FIREFOX_BINARY,
    REUSE_BROWSERS
};